library(DBI)
install.packages("DBI")
install.packages("RMySQL")
MyDataBase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
library(DBI)
library(RMySQL)
MyDataBase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
dbListTables(MyDataBase)
dbListFields(MyDataBase, 'City')
DataDB <- dbGetQuery(MyDataBase, "select * from City")
View(DataDB)
class(DataDB)
head(DataDB)
pop.mean <- mean(DataDB$Population)  # Media a la variable de población
pop.mean
pop.3 <- pop.mean *3   # Operaciones aritméticas
pop.3
str(DataDB)
library(dplyr)
pop50.mex <-  DataDB %>% filter(CountryCode == "MEX" ,  Population > 50000)   # Ciudades del país de México con más de 50,000 habitantes
head(pop50.mex)
unique(DataDB$CountryCode)   # Países que contiene la BDD
lenght(unique(DataDB$CountryCode))   # Países que contiene la BDD
length(unique(DataDB$CountryCode))   # Países que contiene la BDD
class(unique(DataDB$CountryCode))   # Países que contiene la BDD
dbDisconnect(MyDataBase)
View(MyDataBase)
View(DataDB)
dbListTables(MyDataBase)
MyDataBase <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "shinydemo",
host = "shiny-demo.csa7qlmguqrf.us-east-1.rds.amazonaws.com",
username = "guest",
password = "guest")
dbListTables(MyDataBase)
head(pop50.mex)
library(rvest)
myurl <- "https://www.glassdoor.com.mx/Sueldos/data-scientist-sueldo-SRCH_KO0,14.htm"
library(rvest)
myurl <- "https://www.glassdoor.com.mx/Sueldos/data-scientist-sueldo-SRCH_KO0,14.htm"
file <- read_html(myurl)
View(file)
tables <- html_nodes(file, "table")
tables
tables <- html_nodes(tables[1], fill=TRUE)
tables <- html_nodes(tables[1])
View(tables)
table <- na.omit(as.data.frame(table1))
table <- na.omit(as.data.frame(tables))
tables <- html_nodes(file, "table")
tables
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))
str(table)
View(table)
gsub("[0-3]*", " ", table)
View(table)
View(table)
gsub("[0-3]*", " ", table)
gsub("MXN$", " ", table)
View(table)
table$Sueldo<-("MXN$", " ", table$Sueldo)
table$Sueldo<-("MXN$" , " " , table$Sueldo)
table$Sueldo<-("MXN$" , "" , table$Sueldo)
table$Sueldo<-("MXN" , "" , table$Sueldo)
View(table)
table$Sueldo<-gsub("/mes" , "" , table$Sueldo)
View(table)
table$Sueldo<-gsub("[0-3]*" , "" , table$Sueldo)
View(table)
View(table)
myurl <- "https://www.glassdoor.com.mx/Sueldos/data-scientist-sueldo-SRCH_KO0,14.htm"
file <- read_html(myurl)
tables <- html_nodes(file, "table")
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))
str(table)
table$Sueldo<-gsub("/mes" , "" , table$Sueldo)
table$Sueldo<-gsub("sueldos informados
MXN$" , "" , table$Sueldo)
View(table)
table$Sueldo<-gsub("MXN$" , "" , table$Sueldo)
View(table)
View(table)
str(table)
table$Sueldo<-gsub("MXN$" , "" , table$Sueldo)
View(table)
View(table)
table$Sueldo<-gsub("/mes" , "" , table$Sueldo)
View(table)
table$Sueldo<-gsub("MXN$", table$Sueldo)
table$Sueldo<-gsub("MXN$" , "" , table$Sueldo)
table$Sueldo<-gsub("MXN$" , "" , table$Sueldo)
View(table)
table$Sueldo<-gsub("MXN" , "" , table$Sueldo)
View(table)
library(rvest)
myurl <- "https://www.glassdoor.com.mx/Sueldos/data-scientist-sueldo-SRCH_KO0,14.htm"
file <- read_html(myurl)
tables <- html_nodes(file, "table")
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))
str(table)
table$Sueldo<-gsub("/mes" , "" , table$Sueldo)
table$Sueldo<-gsub("MXN\\$" , "" , table$Sueldo)
View(table)
table$Sueldo<-as.numeric(table$Sueldo)
table$Sueldo<-as.numeric(as.numeric(table$Sueldo))
str(table)
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))
str(table)
table$Sueldo<-gsub("/mes" , "" , table$Sueldo)
table$Sueldo<-gsub("MXN\\$" , "" , table$Sueldo)
head(table)
table$Sueldo<-as.numeric(as.charcter(table$Sueldo))
table$Sueldo<-as.numeric(as.character(table$Sueldo))
file <- read_html(myurl)
tables <- html_nodes(file, "table")
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))
str(table)
table$Sueldo<-gsub("/mes" , "" , table$Sueldo)
table$Sueldo<-gsub("MXN\\$" , "" , table$Sueldo)
head(table)
table$Sueldo<-as.numeric(as.character(table$Sueldo))
View(table)
file <- read_html(myurl)
tables <- html_nodes(file, "table")
table1 <- html_table(tables[1], fill = TRUE)
table <- na.omit(as.data.frame(table1))
str(table)
table$Sueldo<-gsub("/mes" , "" , table$Sueldo)
table$Sueldo<-gsub("MXN\\$" , "" , table$Sueldo)
table$Sueldo<-gsub("\\," , "" , table$Sueldo)
View(table)
table$Sueldo<-as.numeric(as.character(table$Sueldo))
str(table)
View(table)
max(table$Sueldo)
min(table$Sueldo)
which.max(table$Sueldo)
table[20]
table(20)
table[which.min(table$Sueldo),]
table[which.max(table$Sueldo),]
maximo<-table[which.max(table$Sueldo),]
minimo<-table[which.min(table$Sueldo),]
library(rvest)
myurl <- "http://www.aire.cdmx.gob.mx/default.php?opc=%27ZaBhnmI=&dc=%27ZA=="
file <- read_html(myurl)
tables <- html_nodes(file, "table")
tables
table1 <- html_table(tables[1], fill = TRUE)
View(table1)
table1
table <- na.omit(as.data.frame(table1))
View(table1)
View(table)
filter(table, table$Entidad == "CDMX")
str(table)
table<-filter(table, table$Entidad == "CDMX")
table
table[table[,Entidad]="CDMX",]
table[table[,"Entidad"]="CDMX",]
table[table[,"Entidad"]=CDMX,]
table[table[,"Entidad"]=="CDMX",]
table[table[,"Entidad"]=="CDMX"
table[table[,"Entidad"]=="CDMX"
lib(dplyr)
library(e1071)
setwd(url)
library(dplyr)
library(ggplot2)
library(e1071)
##########################FUNCIONES PARA LA LECTURA Y LIMPIEZA DE DATOS####################3
##Separada por comas
LecturaCSV <- function(url){
setwd(url)
nombre <- lapply(dir(), read.csv, sep = ",")
}
library(dplyr)
library(ggplot2)
library(e1071)
##########################FUNCIONES PARA LA LECTURA Y LIMPIEZA DE DATOS####################3
##Separada por comas
LecturaCSV <- function(url){
setwd(url)
nombre <- lapply(dir(), read.csv, sep = ",")
}
View(LecturaCSV)
View(LecturaCSV)
##########################FUNCIONES PARA LA LECTURA Y LIMPIEZA DE DATOS####################3
##Separada por comas
LecturaCSV <- function(url){
setwd(url)
nombre <- lapply(dir(path=url,full.names=T), read.csv, sep = ",")
}
View(LecturaCSV)
scores<-rank.teams(score=score)
scores<-rank.teams(home.score=away.score)
library(dplyr)
library(ggplot2)
library(fbRanks)
getwd()
setwd("C:/Users/leona/Documents/Bedu/Tarea/Postworks/Postwork2")
Fut.com <- lapply(dir(), read.csv)
lapply(Fut.com, str)
View(Fut.com[[1]])
Fut.red<-lapply(Fut.com, select,Date, HomeTeam,HS,AwayTeam,AS)
SmallData = rbind(Fut.red[[1]],Fut.red[[2]],Fut.red[[3]])
colnames(SmallData) <- c("date", "home.team","home.score","away.team","away.score")
View(Fut.red[[1]])
colnames(SmallData) <- c("date", "home.team","home.score","away.team","away.score")
View(Fut.red[[1]])
setwd("C:/Users/leona/Documents/Bedu/Tarea/Postworks/PostWork5")
write.csv(SmallData,'soccer.csv',row.names = FALSE)
listasoccer<-create.fbRanks.dataframes(scores.file="soccer.csv")
scores<-rank.teams(home.score=away.score)
scores<-rank.teams(listasoccer=score)
my_collection = mongo(collection = "match", db = "match_games")
library(mongolite)
getwd()
setwd("C:/Users/leona/Documents/Bedu/Tarea/Postworks/PostWork7")
match<-read.csv("data.csv")
my_collection = mongo(collection = "match", db = "match_games")
dmd$import(file("data.csv"))
match$import(file("data.csv"))
db$import(file("data.csv"))
match$import(file("data.csv"))
if(con$count() > 0)
con$drop()
match$import(file("data.csv"))
my_collection$insert(file("data.csv"))
my_collection$insert(file(match))
View(match)
my_collection$insert(match)
library(mongolite)
getwd()
setwd("C:/Users/leona/Documents/Bedu/Tarea/Postworks/PostWork7")
match<-read.csv("data.csv")
my_collection = mongo(collection = "match", db = "match_games")
if(con$count() > 0)
con$drop()
library(mongolite)
getwd()
setwd("C:/Users/leona/Documents/Bedu/Tarea/Postworks/PostWork7")
match<-read.csv("data.csv")
my_collection = mongo(collection = "match", db = "match_games")
my_collection$insert(match)
out <- m$cout('{id}')
out <- my_collection$cout('{id}')
out <- my_collection$count('{id}')
View(match)
out <- my_collection$count('{X}')
out <- my_collection$count('{"X"}')
out <- my_collection$count('{"Date"}')
my_collection$count('{"Date"}')
my_collection$count('[{$count: 'id'}]')
my_collection$count('[{$count: "id"}]')
my_collection$('[{$count: "id"}]')
my_collection$read('[{$count: "id"}]')
View(match)
my_collection$count('{"FTAG":1}')
my_collection$count('{"_id"}')
my_collection$count('{"_id":1}')
my_collection$count('{"_id":>1}')
my_collection$count('{"_id":=>1}')
my_collection$count('{"_id">=1}')
my_collection$count('{"_id":1}')
my_collection$count('{"FTAG"}')
my_collection$count('{"FTAG"}:1')
my_collection$count('{"FTAG":1}')
my_collection$count('{"FTAG">1}')
my_collection$count('{"FTAG":1}')
my_collection$count('{"_id":1}')
my_collection$count('{"_id"}')
my_collection$count('{"_id":}')
my_collection$count('{_id}')
my_collection$count()
my_collection$drop()
out <- my_collection$count('{"Date"}')
my_collection$count()
library(mongolite)
getwd()
setwd("C:/Users/leona/Documents/Bedu/Tarea/Postworks/PostWork7")
match<-read.csv("data.csv")
my_collection = mongo(collection = "match", db = "match_games")
my_collection$insert(match)
my_collection$count()
my_collection$drop()
my_collection$aggregate('[{"$group":{ "find": {"Date":2017-12-20}}}]')
my_collection$aggregate('[{" "find": {"Date":2017-12-20}}]')
my_collection$aggregate('[{ "find": {"Date":2017-12-20}}]')
my_collection$find('{"Date":2015-12-20}')
my_collection$find('{"Date":"2015-12-20"}')
library(mongolite)
getwd()
setwd("C:/Users/leona/Documents/Bedu/Tarea/Postworks/PostWork7")
match<-read.csv("data.csv")
my_collection = mongo(collection = "match", db = "match_games")
my_collection$insert(match)
my_collection$count()
my_collection$find('{"Date":"2015-12-20"}')
my_collection$drop()
